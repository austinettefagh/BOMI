<apex:page id="Dashboard" standardStylesheets="false" controller="revcult.DashboardController" showHeader="true" sidebar="false" docType="html-5.0" title="Security Insights">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
        <head>
            <apex:includeScript value="{!URLFOR($Resource.revcult__Dashboard,'/deps/svg4everybody.min.js')}" />
            <apex:includeScript value="{!URLFOR($Resource.revcult__Dashboard,'/deps/schwartzianTransformSortBy.js')}" />
            <apex:slds />
            <script>
                    var dataFromSF = {
                        getLatestJob: {!$RemoteAction.DashboardController.getLatestJob},
                        getResultsFromJob: {!$RemoteAction.DashboardController.getResultsFromJob},
                        getScoresFromJob: {!$RemoteAction.DashboardController.getScoresFromJob},
                        getJobById: {!$RemoteAction.DashboardController.getJobById},
                        startRefresh: {!$RemoteAction.DashboardController.startRefresh},
                        getLatestCompletedJob: {!$RemoteAction.DashboardController.getLatestCompletedJob},
                        checkMetadataApi: {!$RemoteAction.DashboardController.checkMetadataApi},
                        getExecutions: {!$RemoteAction.DashboardController.getExecutions},
                        emailJobFile: {!$RemoteAction.DashboardController.emailJobFile},
                        getContentVersionIdsByNames: {!$RemoteAction.DashboardController.getContentVersionIdsByNames},
                        getVersionData: {!$RemoteAction.DashboardController.getVersionData},
                        getComponentsByKey: {!$RemoteAction.DashboardController.getComponentsByKey},
                        createDismissals: {!$RemoteAction.DashboardController.createDismissals},
                        deactivateDismissal: {!$RemoteAction.DashboardController.deactivateDismissal},
                        getUserConfigRecord: {!$RemoteAction.DashboardController.getUserConfigRecord},
                        setRowExlcusion: {!$RemoteAction.DashboardController.setRowExlcusion},
                        saveGridConfig: {!$RemoteAction.DashboardController.saveGridConfig},
                        getGridConfig: {!$RemoteAction.DashboardController.getGridConfig},
                        getJobProgressData: {!$RemoteAction.DashboardController.getJobProgressData},
                        getInsightCategoryToComponentKeys: {!$RemoteAction.DashboardController.getInsightCategoryToComponentKeys},
                        getFileFromJob: {!$RemoteAction.DashboardController.getFileFromJob},
                        getResultFileNamesForComponents: {!$RemoteAction.DashboardController.getResultFileNamesForComponents},
                        getDcTabUrl: {!$RemoteAction.DashboardController.getDcTabUrl},
                        getPEATabUrl: {!$RemoteAction.DashboardController.getPEATabUrl},
                        updateSessionCache: {!$RemoteAction.DashboardController.updateSessionCache},
                        checkAppNavigationCache: {!$RemoteAction.DashboardController.checkAppNavigationCache},
                        isPEAJobRunning: {!$RemoteAction.DashboardController.isPEAJobRunning},
                        graEnabled: {!$RemoteAction.DashboardController.graEnabled},
                        checkForExistingGraData: {!$RemoteAction.DashboardController.checkForExistingGraData},
                        saveGraSection: {!$RemoteAction.DashboardController.saveGraSection},
                        getGRACategoryDetails: {!$RemoteAction.DashboardController.getGRACategoryDetails},
                        getInsightsForGRACategory: {!$RemoteAction.DashboardController.getInsightsForGRACategory},
                        getGRAInsightData: {!$RemoteAction.DashboardController.getGRAInsightData},
                        loadPreviousAssessment: {!$RemoteAction.DashboardController.loadPreviousAssessment},
                        convertBase64ToFileAttachment: {!$RemoteAction.DashboardController.convertBase64ToFileAttachment},
                        getOnLoadData: {!$RemoteAction.DashboardController.getOnLoadData},
                        getInsightRisksFromJob: {!$RemoteAction.DashboardController.getInsightRisksFromJob},
                        getComponentsByCompKeyWithOverrides: {!$RemoteAction.DashboardController.getComponentsByCompKeyWithOverrides},
                        getCurrentScoringPoliciesForCompare: {!$RemoteAction.DashboardController.getCurrentScoringPoliciesForCompare},
                        updateInsightRiskBulk: {!$RemoteAction.DashboardController.updateInsightRiskBulk},
                        hasAccessToUpsertRisk: {!$RemoteAction.DashboardController.hasAccessToUpsertRisk},
                        getCanSendEmailBool: {!$RemoteAction.DashboardController.getCanSendEmailBool},
                        getUpgradeAlertSettings: {!$RemoteAction.DashboardController.getUpgradeAlertSettings},
                        setUpgradeAlertSettings: {!$RemoteAction.DashboardController.setUpgradeAlertSettings},
                        getInsightCategoryScoreSectionMdt: {!$RemoteAction.DashboardController.getInsightCategoryScoreSectionMdt},
                        getComponentsByScoringCategoryKey: {!$RemoteAction.DashboardController.getComponentsByScoringCategoryKey},
                        getHighRiskPermissionMdt: {!$RemoteAction.DashboardController.getHighRiskPermissionMdt},
                        hasPermissionDownloadAppExchangePackages: {!$RemoteAction.DashboardController.hasPermissionDownloadAppExchangePackages},
                        getAllCompletedProgressSteps: {!$RemoteAction.DashboardController.getAllCompletedProgressSteps},
                        dismissScoringPolicyBanner: {!$RemoteAction.DashboardController.dismissScoringPolicyBanner},
                        getScoringPolicyBannerStatus: {!$RemoteAction.DashboardController.getScoringPolicyBannerStatus},
                        getScoringPoliciesFromJob: {!$RemoteAction.DashboardController.getScoringPoliciesFromJob},
                        getScoringPoliciesFromJobs: {!$RemoteAction.DashboardController.getScoringPoliciesFromJobs},
                        evaluateOrgDataForScoringPolicyUpdates: {!$RemoteAction.DashboardController.evaluateOrgDataForScoringPolicyUpdates},
                        conicGradientBg: "{!URLFOR($Resource.Dashboard,'/deps/conicGradientBg.png')}",
                        grunge: "{!URLFOR($Resource.Dashboard,'/deps/grunge.png')}",
                        sessionId: '{!$Api.Session_ID}',
                        theme: '{!$User.UITheme}',
                        inLightning: '{!$User.UITheme}' === 'Theme4d',
                        record: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#record")}',
                        warning: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#warning")}',
                        error: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#error")}',
                        close: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#close")}',
                        check: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#check")}',
                        delete: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#delete")}',
                        general:'{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#company")}',
                        authentication: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#privately_shared")}',
                        dataProtection: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#locker_service_console")}',
                        add: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#add")}',
                        info: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#info")}',
                        edit: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#edit")}',
                        switch: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#switch")}',
                        arrowUp: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#arrowup")}',
                        arrowDown: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#arrowdown")}',
                        back: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#back")}',
                        forward: '{!URLFOR($Asset.SLDS, "/assets/icons/utility-sprite/svg/symbols.svg#forward")}',
                        chevronLeft: '{!URLFOR($Asset.SLDS, "assets/icons/utility-sprite/svg/symbols.svg#chevronleft")}',
                        chevronRight: '{!URLFOR($Asset.SLDS, "assets/icons/utility-sprite/svg/symbols.svg#chevronright")}',
                        archive: '{!URLFOR($Asset.SLDS, "assets/icons/utility-sprite/svg/symbols.svg#archive")}',
                        open: '{!URLFOR($Asset.SLDS, "assets/icons/utility-sprite/svg/symbols.svg#open")}',
                        PlatformPNG: '{!URLFOR($Resource.Dashboard, "/deps/Platform.png")}',
                        ClearPNG: '{!URLFOR($Resource.Dashboard, "/deps/Clear.png")}',
                        ConfigPNG: '{!URLFOR($Resource.Dashboard, "/deps/Configuration.png")}',
                        ShieldPNG: '{!URLFOR($Resource.Dashboard, "/deps/Shield.png")}',
                        PendingPNG: '{!URLFOR($Resource.Dashboard, "/deps/Pending.png")}',
                        lockIcon: '{!URLFOR($Resource.Dashboard, "/deps/Lock.svg")}',
                        unlockIcon: '{!URLFOR($Resource.Dashboard, "/deps/Unlock.svg")}',
                        execSummary: '{!URLFOR($Resource.Dashboard, "/deps/graExecSummary.svg")}',
                        prevAssessments: '{!URLFOR($Resource.Dashboard, "/deps/graPreviousAssessment.svg")}',
                        obHeader: '{!URLFOR($Resource.Dashboard, "/deps/OBHeader.svg")}',
                        securityReportAuthorization: '{!URLFOR($Resource.Dashboard, "/deps/securityReportAuthorization.svg")}',
                        securityReportAuthentication: '{!URLFOR($Resource.Dashboard, "/deps/securityReportAuthentication.svg")}',
                        securityReportDataLossPrevention: '{!URLFOR($Resource.Dashboard, "/deps/securityReportDataLossPrevention.svg")}',
                        securityReportDataProtection: '{!URLFOR($Resource.Dashboard, "/deps/securityReportDataProtection.svg")}',
                        securityReportIntegration: '{!URLFOR($Resource.Dashboard, "/deps/securityReportIntegration.svg")}',
                        securityReportMonitoring: '{!URLFOR($Resource.Dashboard, "/deps/securityReportMonitoring.svg")}',
                        getOrgName: {!$RemoteAction.DashboardController.getOrgName},
                        userPermissions: {
                            canDismiss: {!$Permission.SI_Dismiss_Items}
                        },
                    }
                    svg4everybody()
            </script>
            <meta charset="utf-8"/>
            <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
            <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link href="{!URLFOR($Resource.Dashboard, 'dist/style.css')}" rel="stylesheet"/></head>
        <body>
            <div id="app"></div>
        <script type="text/javascript" src="{!URLFOR($Resource.Dashboard, 'dist/build.js')}"></script></body>
    </html>
</apex:page>