<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Batch_To_get_Loan_Number</name>
        <label>Batch To get Loan Number</label>
        <locationX>974</locationX>
        <locationY>1454</locationY>
        <actionName>WS_BatchToGetLoanNumberSchedular</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <nameSegment>WS_BatchToGetLoanNumberSchedular</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <decisions>
        <name>ifBatchAlreadyRan</name>
        <label>ifBatchAlreadyRan</label>
        <locationX>776</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>GetEtranCredRecord</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Batch_Ran_in_last_24_Hours</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>DifferenceBetweenJobCreatedTimeandCurrentTime</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>eTranBatchTimeGap</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen2</targetReference>
            </connector>
            <label>If Batch Ran in last 24 Hours</label>
        </rules>
    </decisions>
    <decisions>
        <name>ifBatchisRunning</name>
        <label>ifBatchisRunning</label>
        <locationX>413</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>ifBatchAlreadyRan</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsRunning</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetApexJobDetails.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Queued</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetApexJobDetails.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Processing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetApexJobDetails.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Preparing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetApexJobDetails.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Holding</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen3</targetReference>
            </connector>
            <label>IsRunning</label>
        </rules>
        <rules>
            <name>IFfirsttimebatchrun</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetApexJobDetails</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>IFfirsttimebatchrun</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsPinExpired</name>
        <label>IsPinExpired</label>
        <locationX>974</locationX>
        <locationY>878</locationY>
        <defaultConnector>
            <targetReference>Batch_To_get_Loan_Number</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>if_Expired</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>DifferenceBetweenLastModifiedDateandCurrentTime</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>23.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>information2</targetReference>
            </connector>
            <label>if Expired</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsUserHasthePermission</name>
        <label>IsUserHasthePermission</label>
        <locationX>847</locationX>
        <locationY>158</locationY>
        <defaultConnector>
            <targetReference>Screen1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ifYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>eTranBatchCustomPermission</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetApexClassId</targetReference>
            </connector>
            <label>ifYes</label>
        </rules>
    </decisions>
    <formulas>
        <name>DifferenceBetweenJobCreatedTimeandCurrentTime</name>
        <dataType>Number</dataType>
        <expression>((Now() - {!GetApexJobDetails.CreatedDate})*24*60)/60</expression>
        <scale>1</scale>
    </formulas>
    <formulas>
        <name>DifferenceBetweenLastModifiedDateandCurrentTime</name>
        <dataType>Number</dataType>
        <expression>((Now() - {!GetEtranCredRecord.LastModifiedDate})*24*60)/60</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>eTranBatchCustomPermission</name>
        <dataType>Boolean</dataType>
        <expression>{!$Permission.eTran_Batch_Access}</expression>
    </formulas>
    <formulas>
        <name>eTranBatchTimeGap</name>
        <dataType>Number</dataType>
        <expression>Value({!$Label.eTran_Batch_Time_Gap})</expression>
        <scale>1</scale>
    </formulas>
    <formulas>
        <name>RemainigTimeToRunBatchAgain</name>
        <dataType>Number</dataType>
        <expression>24 - {!DifferenceBetweenJobCreatedTimeandCurrentTime}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>eTran Get Batch Loan Number {!$Flow.CurrentDateTime}</interviewLabel>
    <label>eTran Get Batch Loan Number</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>GetApexClassId</name>
        <label>GetApexClassId</label>
        <locationX>413</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetApexJobDetails</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>WS_BatchToGetLoanNumber</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ApexClass</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetApexJobDetails</name>
        <label>GetApexJobDetails</label>
        <locationX>413</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ifBatchisRunning</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ApexClassId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetApexClassId.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AsyncApexJob</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetEtranCredRecord</name>
        <label>GetEtranCredRecord</label>
        <locationX>974</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsPinExpired</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>TECH_SFUsername__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Username</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EtranCredential__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>information2</name>
        <label>information2</label>
        <locationX>842</locationX>
        <locationY>998</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Generate_Reset_Pin</targetReference>
        </connector>
        <fields>
            <name>Informative</name>
            <fieldText>&lt;p&gt;Your Pin has been expired please click next to reset the Pin.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Screen1</name>
        <label>Screen1</label>
        <locationX>1282</locationX>
        <locationY>278</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ErrorMessage</name>
            <fieldText>&lt;p&gt;Please contact the system administrator for eTran Batch process access.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Screen2</name>
        <label>Screen2</label>
        <locationX>578</locationX>
        <locationY>758</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Warning</name>
            <fieldText>&lt;p&gt;Batch Class has already been run in the last 24 hours.  Please try after &lt;b&gt;{!RemainigTimeToRunBatchAgain} &lt;/b&gt;Hours&lt;b&gt;.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Screen3</name>
        <label>Screen3</label>
        <locationX>50</locationX>
        <locationY>638</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Information</name>
            <fieldText>&lt;p&gt;Batch Class is in &lt;b&gt;{!GetApexJobDetails.Status}&lt;/b&gt; status. Please wait for it to complete.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Screen_4</name>
        <label>Screen 4</label>
        <locationX>842</locationX>
        <locationY>1238</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Batch_To_get_Loan_Number</targetReference>
        </connector>
        <fields>
            <name>information4</name>
            <fieldText>&lt;p&gt;The pin has been reset and it is updated. Please click next to start the batch job.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>721</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>IsUserHasthePermission</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Generate_Reset_Pin</name>
        <label>Generate Reset Pin</label>
        <locationX>842</locationX>
        <locationY>1118</locationY>
        <connector>
            <targetReference>Screen_4</targetReference>
        </connector>
        <flowName>eTran_From_Loan_GeneratePIN</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
